///////////////////////////////////////////////////////////
//  Promocja.cs
//  Implementation of the Class Promocja
//  Generated by Enterprise Architect
//  Created on:      22-Nov-2017 3:42:17 PM
//  Original author: grzes
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using DataServiceLayer.IService;
using DataServiceLayer.Models.View;
using DataBaseLayer;

namespace DataServiceLayer.Service
{
    public class Promocja : IPromocja
    {
        public bool Usun(int IdPromocji)
        {
            using (DataBase context = new DataBase())
            {
                var doUsuniecia = context.Promocjas.SingleOrDefault(c => c.promocjaID == IdPromocji);
                if(doUsuniecia != null)
                {
                    context.Promocjas.Remove(doUsuniecia);
                }
            }
            return true;
        }

        public PromocjeModel GetPromocje(int IdPromocji)
        {
            using (DataBase context = new DataBase())
            {
                var promocja = context.Promocjas.SingleOrDefault(c => c.promocjaID == IdPromocji);
                if(promocja != null)
                {
                    return new PromocjeModel
                    {
                        DataWdrozenia = promocja.DataWdrozenia,
                        IDPromoca = promocja.promocjaID,
                        NazwaPromocji = promocja.nazwaPromocji,
                        OpisPromocji = promocja.opisPromocji
                    };
                }
                return null;              
            }
        }

        public PromocjeModel Edycja(PromocjeModel model)
        {
            using (DataBase context = new DataBase())
            {
                var promocja = context.Promocjas.SingleOrDefault(c => c.promocjaID == model.IDPromoca);
                promocja.opisPromocji = model.OpisPromocji;
                promocja.nazwaPromocji = model.NazwaPromocji;
                promocja.DataWdrozenia = model.DataWdrozenia;
                context.SaveChanges();
            }
            return model;
        }

        public PromocjeModel Wprowadz(PromocjeModel model)
        {
            using (DataBase context = new DataBase())
            {
                var kierownik = context.Kierowniks.SingleOrDefault(c => c.kierownikID == model.IdKierownika);
                DataBaseLayer.Promocja promocja = new DataBaseLayer.Promocja
                {
                    DataWdrozenia = model.DataWdrozenia,
                    nazwaPromocji = model.NazwaPromocji,
                    opisPromocji = model.OpisPromocji,
                    kierownikID = model.IdKierownika,
                    Kierownik = kierownik
                };
                context.Promocjas.Add(promocja);
                context.SaveChanges();
            }

            return new PromocjeModel();
        }

        public List<PromocjeModel> GetPromocjaList()
        {
            using (DataBase context = new DataBase())
            {
                List<PromocjeModel> list = new List<PromocjeModel>();
                var dataBaseList = context.Promocjas.ToList();
                foreach(var promocja in dataBaseList)
                {
                    list.Add(new PromocjeModel
                    {
                        DataWdrozenia = promocja.DataWdrozenia,
                        NazwaPromocji = promocja.nazwaPromocji,
                        OpisPromocji = promocja.opisPromocji,
                        IDPromoca = promocja.promocjaID,
                        NazwaKierownika = promocja.Kierownik.imie + " " + promocja.Kierownik.nazwisko
                    });
                }
                return list;
            }
        }

    }//end Promocja
}